stages:
  - test
  - build
  - build-docker
  - deploy

test-runtime:
  image: node:lts-alpine
  stage: test
  cache:
    key: ${CI_BUILD_REF}
    paths:
      - node_modules
  script:
    - yarn && yarn test

# test-client:
#   image: node:lts-alpine
#   stage: test
#   cache:
#     key: ${CI_BUILD_REF}
#     paths:
#       - client/node_modules
#   script:
#     - cd client
#     - yarn && yarn ng test --watch false --browsers ChromeHeadless

build-webserver:
  image: node:lts-alpine
  stage: build
  cache:
    key: ${CI_BUILD_REF}
    paths:
      - client/node_modules
  artifacts:
    paths:
      - client/dist
  script:
    - yarn
    - yarn build:webserver
  only:
    refs:
      - main
      - staging
      - develop

build-docker-webserver:
  services:
    - docker:dind
  image: registry.gitlab.com/codestryke-tech/dmg-mori/mdc-light/gitlab-ci
  stage: build-docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - yarn docker:build:webserver
  only:
    refs:
      - main
      - staging
      - develop

build-runtime:
  services:
    - docker:dind
  image: registry.gitlab.com/codestryke-tech/dmg-mori/mdc-light/gitlab-ci
  stage: build
  cache:
    key: ${CI_BUILD_REF}
    paths:
      - node_modules
  artifacts:
    paths:
      - runtime
  script:
    - yarn
    - yarn build
    - yarn build:dist
  only:
    refs:
      - main
      - staging
      - develop

build-docker-runtime:
  services:
    - docker:dind
  image: registry.gitlab.com/codestryke-tech/dmg-mori/mdc-light/gitlab-ci
  stage: build-docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - yarn docker:build:mdclight
  only:
    refs:
      - main
      - staging
      - develop
