# Azure pipelines for the mdclight

# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema/?view=azure-pipelines

trigger:
  batch: true
  branches:
    exclude: [main, staging]

pool:
  vmImage: ubuntu-latest

variables:
  DOCKER_REGISTRY: mdclightdev.azurecr.io
  BRANCH_NAME: $[replace(replace(variables['Build.SourceBranch'], 'refs/heads/', ''), '/', '-')]

steps:
  - task: Docker@2
    displayName: Login
    inputs:
      containerRegistry: 'mdc-light-acr-dev'
      command: 'login'
  - task: CmdLine@2
    displayName: PrintVersion
    inputs:
      script: |
        git describe --tags
  - task: CmdLine@2
    displayName: BuildBase
    inputs:
      script: |
        # Gets the version of the last change that is affecting the image that is build here
        versionOfLastChange= scripts/build/lastMdclightBaseChange.sh
        echo "Current base version ${versionOfLastChange}" 

        echo "Checking for current docker image" 
        exists= scripts/build/checkIfImageExists.sh ${DOCKER_REGISTRY}/mdclight-base:${versionOfLastChange}
        echo "Docker image exists ${exists}" 

        # Builds docker image if it exists in the version that changed something the last time
        if [[ exists -eq false ]]; then
          echo "Building docker image ${DOCKER_REGISTRY}/mdclight-base:${versionOfLastChange}" 
          docker run --privileged --rm tonistiigi/binfmt --install arm64
          docker run --privileged --rm tonistiigi/binfmt
          docker buildx create --use
          docker buildx build --platform linux/arm64,linux/amd64 -t ${DOCKER_REGISTRY}/mdclight-base:${versionOfLastChange} -f docker/mdclight-base.Dockerfile --push .
        fi
  - task: CmdLine@2
    displayName: Build Fanuc image layer
    inputs:
      script: |
        # Gets the version of the last change that is affecting the image that is build here
        versionOfLastChange= scripts/build/lastFanucChange.sh
        echo "Current fanuc version ${versionOfLastChange}" 

        echo "Checking for current docker image" 
        exists= scripts/build/checkIfImageExists.sh ${DOCKER_REGISTRY}/mdclight-fanuc:${versionOfLastChange}
        echo "Docker image exists ${exists}" 

        # Builds docker image if it exists in the version that changed something the last time
        if [[ exists -eq false ]]; then
          echo "Building docker image ${DOCKER_REGISTRY}/mdclight-fanuc:${versionOfLastChange}"
          docker run --privileged --rm tonistiigi/binfmt --install arm64
          docker run --privileged --rm tonistiigi/binfmt
          docker buildx create --use
          docker buildx build --platform linux/arm64 --build-arg DOCKER_REGISTRY=${DOCKER_REGISTRY} --build-arg BASE_VERSION=${scripts/build/lastMdclightBaseChange.sh} -t ${DOCKER_REGISTRY}/mdclight-fanuc:${versionOfLastChange} -f docker/mdclight-fanuc.Dockerfile . --push --progress plain
        fi
  - task: CmdLine@2
    displayName: BuildMdc
    inputs:
      script: |
        # Gets the version of the last change that is affecting the image that is build here
        versionOfLastChange= scripts/build/lastMdclightChange.sh
        echo "Current mdclight version ${versionOfLastChange}" 

        echo "Checking for current docker image" 
        exists= scripts/build/checkIfImageExists.sh ${DOCKER_REGISTRY}/mdclight:${versionOfLastChange}

        # Builds docker image if it exists in the version that changed something the last time
        if [[ exists -eq false ]]; then
          echo "Building docker image ${DOCKER_REGISTRY}/mdclight:${versionOfLastChange}"
          docker run --privileged --rm tonistiigi/binfmt --install arm64
          docker run --privileged --rm tonistiigi/binfmt
          docker buildx create --use
          docker buildx build --platform linux/arm64 --build-arg DOCKER_REGISTRY=${DOCKER_REGISTRY} --build-arg FANUC_VERSION=${scripts/build/lastFanucChange.sh} -t ${DOCKER_REGISTRY}/mdclight:${versionOfLastChange} -f docker/mdclight-fanuc.Dockerfile . --push --progress plain
        fi
