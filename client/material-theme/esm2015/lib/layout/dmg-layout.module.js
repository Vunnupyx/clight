import { NgModule } from '@angular/core';
import {
  BreakpointClassXxlDirective,
  BreakpointFillXxlDirective,
  BreakpointFlexAlignXxlDirective,
  BreakpointFlexXxlDirective,
  BreakpointHideXxlDirective,
  BreakpointImgSrcXxlDirective,
  BreakpointOffsetXxlDirective,
  BreakpointOrderXxlDirective,
  BreakpointShowXxlDirective,
  BreakpointStyleXxlDirective
} from './breakpoint-xxl.directive';
import {
  BreakpointClassXxsDirective,
  BreakpointFillXxsDirective,
  BreakpointFlexAlignXxsDirective,
  BreakpointFlexXxsDirective,
  BreakpointHideXxsDirective,
  BreakpointImgSrcXxsDirective,
  BreakpointOffsetXxsDirective,
  BreakpointOrderXxsDirective,
  BreakpointShowXxsDirective,
  BreakpointStyleXxsDirective
} from './breakpoint-xxs.directive';
import { CelosNextBreakPointsProvider } from './celosnext-breakpoints';
import {
  BreakpointClassLtXsDirective,
  BreakpointFillLtXsDirective,
  BreakpointFlexAlignLtXsDirective,
  BreakpointFlexLtXsDirective,
  BreakpointHideLtXsDirective,
  BreakpointImgSrcLtXsDirective,
  BreakpointOffsetLtXsDirective,
  BreakpointOrderLtXsDirective,
  BreakpointShowLtXsDirective,
  BreakpointStyleLtXsDirective
} from './breakpoint-lt-xs.directive';
import {
  BreakpointClassGtXlDirective,
  BreakpointFillGtXlDirective,
  BreakpointFlexAlignGtXlDirective,
  BreakpointFlexGtXlDirective,
  BreakpointHideGtXlDirective,
  BreakpointImgSrcGtXlDirective,
  BreakpointOffsetGtXlDirective,
  BreakpointOrderGtXlDirective,
  BreakpointShowGtXlDirective,
  BreakpointStyleGtXlDirective
} from './breakpoint-gt-xl.directive';
export class DmgLayoutModule {}
DmgLayoutModule.decorators = [
  {
    type: NgModule,
    args: [
      {
        declarations: [
          BreakpointHideXxlDirective,
          BreakpointShowXxlDirective,
          BreakpointClassXxlDirective,
          BreakpointStyleXxlDirective,
          BreakpointImgSrcXxlDirective,
          BreakpointFlexXxlDirective,
          BreakpointOrderXxlDirective,
          BreakpointOffsetXxlDirective,
          BreakpointFlexAlignXxlDirective,
          BreakpointFillXxlDirective,
          BreakpointHideXxsDirective,
          BreakpointShowXxsDirective,
          BreakpointClassXxsDirective,
          BreakpointStyleXxsDirective,
          BreakpointImgSrcXxsDirective,
          BreakpointFlexXxsDirective,
          BreakpointOrderXxsDirective,
          BreakpointOffsetXxsDirective,
          BreakpointFlexAlignXxsDirective,
          BreakpointFillXxsDirective,
          BreakpointFillLtXsDirective,
          BreakpointHideLtXsDirective,
          BreakpointShowLtXsDirective,
          BreakpointClassLtXsDirective,
          BreakpointStyleLtXsDirective,
          BreakpointImgSrcLtXsDirective,
          BreakpointFlexLtXsDirective,
          BreakpointOrderLtXsDirective,
          BreakpointOffsetLtXsDirective,
          BreakpointFlexAlignLtXsDirective,
          BreakpointFillGtXlDirective,
          BreakpointHideGtXlDirective,
          BreakpointShowGtXlDirective,
          BreakpointClassGtXlDirective,
          BreakpointStyleGtXlDirective,
          BreakpointImgSrcGtXlDirective,
          BreakpointFlexGtXlDirective,
          BreakpointOrderGtXlDirective,
          BreakpointOffsetGtXlDirective,
          BreakpointFlexAlignGtXlDirective
        ],
        exports: [
          BreakpointHideXxlDirective,
          BreakpointShowXxlDirective,
          BreakpointClassXxlDirective,
          BreakpointStyleXxlDirective,
          BreakpointImgSrcXxlDirective,
          BreakpointFlexXxlDirective,
          BreakpointOrderXxlDirective,
          BreakpointOffsetXxlDirective,
          BreakpointFlexAlignXxlDirective,
          BreakpointFillXxlDirective,
          BreakpointHideXxsDirective,
          BreakpointShowXxsDirective,
          BreakpointClassXxsDirective,
          BreakpointStyleXxsDirective,
          BreakpointImgSrcXxsDirective,
          BreakpointFlexXxsDirective,
          BreakpointOrderXxsDirective,
          BreakpointOffsetXxsDirective,
          BreakpointFlexAlignXxsDirective,
          BreakpointFillXxsDirective,
          BreakpointFillLtXsDirective,
          BreakpointHideLtXsDirective,
          BreakpointShowLtXsDirective,
          BreakpointClassLtXsDirective,
          BreakpointStyleLtXsDirective,
          BreakpointImgSrcLtXsDirective,
          BreakpointFlexLtXsDirective,
          BreakpointOrderLtXsDirective,
          BreakpointOffsetLtXsDirective,
          BreakpointFlexAlignLtXsDirective,
          BreakpointFillGtXlDirective,
          BreakpointHideGtXlDirective,
          BreakpointShowGtXlDirective,
          BreakpointClassGtXlDirective,
          BreakpointStyleGtXlDirective,
          BreakpointImgSrcGtXlDirective,
          BreakpointFlexGtXlDirective,
          BreakpointOrderGtXlDirective,
          BreakpointOffsetGtXlDirective,
          BreakpointFlexAlignGtXlDirective
        ],
        providers: [CelosNextBreakPointsProvider]
      }
    ]
  }
];
//# sourceMappingURL=data:application/json;base64,
