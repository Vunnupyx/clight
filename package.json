{
  "name": "mdc-light",
  "version": "3.0.0",
  "description": "Machine Data Connector Flex",
  "main": "index.js",
  "repository": "git@gitlab.com:codestryke-tech/dmg-mori/mdc-light.git",
  "author": "codestryke <info@codestryke.com>",
  "license": "",
  "private": true,
  "dependencies": {
    "azure-iot-device": "1.18.1",
    "azure-iot-device-mqtt": "1.16.1",
    "azure-iot-provisioning-device": "1.9.1",
    "azure-iot-provisioning-device-amqp": "1.9.1",
    "azure-iot-provisioning-device-http": "1.9.1",
    "azure-iot-provisioning-device-mqtt": "1.8.1",
    "azure-iot-security-symmetric-key": "1.8.1",
    "bcryptjs": "2.4.3",
    "body-parser": "1.20.1",
    "date-fns": "2.22.1",
    "express": "4.18.2",
    "express-fileupload": "1.4.0",
    "express-http-proxy": "1.6.3",
    "express-openapi-validator": "4.13.8",
    "fs-extra": "10.1.0",
    "jsonwebtoken": "8.5.1",
    "mathjs": "11.5.1",
    "node-fetch": "2.6.7",
    "node-opcua": "2.72.2",
    "node-opcua-pki": "2.19.1",
    "nodes7": "0.3.18",
    "semver": "7.3.8",
    "swagger-routes-express": "3.3.2",
    "uuid": "8.3.2",
    "winston": "3.8.2",
    "winston-daily-rotate-file": "4.7.1",
    "xmlbuilder2": "3.0.2"
  },
  "scripts": {
    "dev": "export MDC_LIGHT_FOLDER=mdclight && export PORT=8083 && export NODE_ENV=development && export LOG_LEVEL=debug && export MDC_LIGHT_RUNTIME_VERSION=$(git describe --tags) && export SYS_PREFIX=mdclight && npm run setup:local:dev && export MOCK_USER_BUTTON=true && ts-node-dev --respawn --transpile-only --max-old-space-size=1024 src/index.ts",
    "dev:debugger": "export MDC_LIGHT_FOLDER=mdclight && export NODE_ENV=development && export PORT=8083 && export LOG_LEVEL=debug && export MDC_LIGHT_RUNTIME_VERSION=$(git describe --tags) && export SYS_PREFIX=mdclight && npm run setup:local:dev && export MOCK_USER_BUTTON=true && ts-node-dev --respawn --inspect-brk=0.0.0.0:9229 --transpile-only --max-old-space-size=1024 src/index.ts",
    "dev:webserver": "yarn dev:mock:configagent && cd client && yarn dev",
    "dev:webserver:iot": "cd client && yarn dev",
    "dev:webserver:mock": "yarn dev:mock:configagent && yarn dev:mock:api && cd client && yarn dev:mock",
    "dev:mock:configagent": "(docker rm -f configagentmock || echo 'Container will be created now') && docker run --name configagentmock --mount type=bind,source=$PWD/configuration-agent/swagger.yaml,target=/data,readonly -p 1884:1884 -d mockoon/cli:latest -d data",
    "dev:mock:api": "docker run --mount type=bind,source=$PWD/src/modules/Backend/routes/swagger.json,target=/data,readonly -p 1885:1884 -d mockoon/cli:latest",
    "setup:local:dev": "./scripts/localMocks/createLocalTestingEnv.sh",
    "build": "tsc -p tsconfig.json",
    "build:webserver": "cd client && npm install && npm run build && cd .. && cd user-docs && npm install && npm run build && cd .. && mv user-docs/build client/dist/mdc-light-client/help",
    "test": "jest",
    "format": "prettier --write .",
    "connect:cs:machine": "sudo ssh -N -L 102:192.168.214.1:102 root@192.168.185.200 -v",
    "deploy": "./scripts/deployment/deploy.sh",
    "deploy-dev": "scripts/deployment/deploy-dev.sh",
    "copy-dev": "eval $(cat .env | grep -v '#' | sed 's/^/export /') && yarn build && ./scripts/dev/copy.sh",
    "copy-dev-all": "eval $(cat .env | grep -v '#' | sed 's/^/export /') && yarn build && ./scripts/dev/copy.sh true",
    "log-dev": "eval $(cat .env | grep -v '#' | sed 's/^/export /') && ssh $IOT2050_HOST \"docker logs mdclight-dev -f\"",
    "expose-api": "eval $(cat .env | grep -v '#' | sed 's/^/export /') && ssh -L localhost:8083:$IOT2050_IP:80 $IOT2050_HOST"
  },
  "devDependencies": {
    "@types/express": "4.17.17",
    "@types/fs-extra": "9.0.13",
    "@types/jest": "26.0.24",
    "@types/jsonwebtoken": "8.5.9",
    "@types/node": "16.18.2",
    "@types/node-fetch": "2.6.2",
    "eslint": "7.32.0",
    "jest": "27.5.1",
    "prettier": "2.8.4",
    "ts-jest": "27.1.5",
    "ts-node-dev": "1.1.8",
    "typed-emitter": "1.4.0",
    "typescript": "4.9.5"
  }
}
